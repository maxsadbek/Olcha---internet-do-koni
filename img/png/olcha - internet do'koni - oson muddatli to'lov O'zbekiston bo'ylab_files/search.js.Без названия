const closeIcon = '<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">\n' + '<path d="M17.0003 16.8397L1.15894 1" stroke="#999999" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>\n' + '<path d="M16.8413 1.16016L1 16.9999" stroke="#999999" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>\n' + '</svg>\n'

function numberFormatter(x) {
    if (Number(x) > 0) {
        if (typeof x === 'number') {
            x = x.toString()
        }
        const dollarUSLocale = Intl.NumberFormat('en-US')
        const price = dollarUSLocale.format(x)
        return price.toLocaleString().replace(/,/g, '  ')
    } else {
        return x
    }
}

window.MSearch = {
    words: {
        ru: {
            add_cart: 'В корзину',
            history_title: 'История поиска',
            popular_title: 'Популярные товары',
            all_results: 'Все результаты',
            more: 'еще',
            show_more: 'Показать больше',
            placeholder: 'Поиск...',
            perhaps_you_mean: 'Возможно вы имели в виду: ',
            sum: 'cум',
            empty_result_title: 'Извините, в данный момент нет товаров, соответствующих вашему запросу',
            empty_result_description: 'Возможно, в названии товара допущена ошибка или у нас пока нет такого товара'
        },
        uz: {
            add_cart: 'Savatga qo\'shish',
            history_title: 'Qidiruv tarixi',
            popular_title: 'Ommabop mahsulotlar',
            all_results: 'Barcha natijalar',
            more: 'yana',
            show_more: 'Ko\'proq ko\'rsatish',
            placeholder: 'Qidirish...',
            perhaps_you_mean: 'Siz bunday demoqchi edingizmi: ',
            sum: 'so\'m',
            empty_result_title: 'Kechirasiz, hozirda so‘rovingizga mos mahsulotlar yo‘q',
            empty_result_description: 'Mahsulot nomida xatolik yoki bizda hali bunday mahsulot boʻlmasligi mumkin'
        }
    },
    config: {
        lang: 'ru',
        origin: undefined
    },
    init: function (options = {
        autoInit: true, debounce: 300
    }) {
        let lang = window.MSearch.config.lang
        let words = window.MSearch.words[lang]
        let origin = window.MSearch.config.origin || window.location.origin

        // Function to add meta tags dynamically
        function addMetaTags() {
            // Create meta elements
            const viewportMeta = document.createElement('meta')
            viewportMeta.setAttribute('name', 'viewport')
            viewportMeta.setAttribute('content', 'width=device-width, initial-scale=1, user-scalable=no, shrink-to-fit=no')
            document.head.appendChild(viewportMeta)
        }

        addMetaTags()

        // Create the main search modal

        // var linkElement1 = document.createElement('link');
        // linkElement1.rel = 'stylesheet';
        // linkElement1.href = '/jquery-ui.css';
        // document.head.appendChild(linkElement1);

        const linkElement2 = document.createElement('link')
        linkElement2.rel = 'stylesheet'
        linkElement2.href = 'https://mobile.olcha.uz/style.css'
        document.head.appendChild(linkElement2)

        const linkElement3 = document.createElement('link')
        linkElement3.rel = 'stylesheet'
        linkElement3.href = 'https://mobile.olcha.uz/fonts.css'
        document.head.appendChild(linkElement3)

        const mainSearchModal = document.createElement('div')
        mainSearchModal.id = 'main-search-modal'
        mainSearchModal.style.display = 'none'

        // Append the rest of the HTML structure
        mainSearchModal.innerHTML = `
             <div data-nosnippet class="multi-search multi-theme-full multi-theme-10004 "
         style="z-index: 2147483647;max-height: 100vh;overflow-y: scroll" id="main-block">
        <div class="multi-wrapper">
            <div data-turbolinks="false" class="multi-layout multi-withQuery">
                <div class="multi-header">
                    <form id="multi-form" accept-charset="UTF-8" method="get" class="multi-form">
                        <input type="text" name="q" id="q" class="multi-input form-search" style="width: 80%!important;" autocomplete="off" maxlength="90"
                               spellcheck="false" value="" placeholder="${words.placeholder}">
                        <div class="multi-form__btns">
<!--                            <div class="multi-icon multi-firstIcon multi-searchIcon" style="opacity:1!important;">-->
                                <button aria-label="Search button" class="form-search__btn">
                                    <img src="data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M21.71%2020.29L18%2016.61C19.4401%2014.8144%2020.1375%2012.5353%2019.9488%2010.2413C19.7601%207.94733%2018.6997%205.81281%2016.9855%204.27667C15.2714%202.74053%2013.0338%201.91954%2010.7329%201.9825C8.43203%202.04546%206.24272%202.98759%204.61514%204.61517C2.98756%206.24275%202.04543%208.43207%201.98247%2010.7329C1.91951%2013.0338%202.7405%2015.2714%204.27664%2016.9855C5.81278%2018.6997%207.9473%2019.7601%2010.2413%2019.9488C12.5353%2020.1375%2014.8144%2019.4401%2016.61%2018L20.29%2021.68C20.383%2021.7738%2020.4936%2021.8482%2020.6154%2021.8989C20.7373%2021.9497%2020.868%2021.9758%2021%2021.9758C21.132%2021.9758%2021.2627%2021.9497%2021.3846%2021.8989C21.5064%2021.8482%2021.617%2021.7738%2021.71%2021.68C21.8902%2021.4936%2021.991%2021.2444%2021.991%2020.985C21.991%2020.7257%2021.8902%2020.4765%2021.71%2020.29ZM11%2018C9.61553%2018%208.26215%2017.5895%207.111%2016.8203C5.95986%2016.0511%205.06265%2014.9579%204.53284%2013.6788C4.00303%2012.3997%203.8644%2010.9923%204.1345%209.63439C4.4046%208.27653%205.07128%207.02925%206.05025%206.05028C7.02922%205.07131%208.2765%204.40463%209.63436%204.13453C10.9922%203.86443%2012.3997%204.00306%2013.6788%204.53287C14.9579%205.06268%2016.0511%205.95989%2016.8203%207.11103C17.5895%208.26218%2018%209.61556%2018%2011C18%2012.8565%2017.2625%2014.637%2015.9497%2015.9498C14.637%2017.2625%2012.8565%2018%2011%2018Z'%20fill='white'/%3e%3c/svg%3e" alt="search">
                                </button>
<!--                            </div>-->
                            <div class="multi-icon multi-closeIcon">
                                <svg class="multi-svg" viewBox="0 0 50 50">
                                    <path class="multi-svg-path"
                                          d="M37.304 11.282l1.414 1.414-26.022 26.02-1.414-1.413z"></path>
                                    <path class="multi-svg-path"
                                          d="M12.696 11.282l26.022 26.02-1.414 1.415-26.022-26.02z"></path>
                                </svg>
                            </div>
                        </div>
                    </form>
                </div>
                <input type="text" name="category_id" id="category_id" hidden="">
                <div class="multi-results">
                  <div class="search-history">
                      <h4 class="title">${words.history_title}</h4>
                      <ul class="search-history__list"></ul>
                  </div>
                  <div class="empty-result d-none">

                    </div>
                  <div class="products" id="products-list__container">
                      <h4 class="title">${words.popular_title}</h4>
                  <div class="products-list" id="products-list">

                    </div>
                  </div>

                    <div class="multi-grid__parent" id="container">

                    </div>
                </div>
            </div>
        </div>
        <div></div>
    </div>
        `

        //

        // Append the main search modal to the document body
        document.body.appendChild(mainSearchModal)
        //         var styleElement = document.createElement('style');
        //         styleElement.textContent = ``;

        // Append the style element to the head
        //         document.head.appendChild(styleElement);

        function loadjQueryAndUI(callback) {
            const jqueryScript = document.createElement('script')
            jqueryScript.src = 'https://code.jquery.com/jquery-3.6.0.min.js'
            jqueryScript.onload = function () {
                const jqueryUIScript = document.createElement('script')
                jqueryUIScript.src = 'https://code.jquery.com/ui/1.12.1/jquery-ui.min.js'
                jqueryUIScript.onload = callback
                document.head.appendChild(jqueryUIScript)
            }
            document.head.appendChild(jqueryScript)
        }

        loadjQueryAndUI(function () {
            // Use a self-invoking function to encapsulate mainFunction
            (function ($) {
                // Your main function that depends on jQuery
                function mainFunction() {
                    // Constants and variables
                    let products_list_rendered = false
                    let lastPage = 1
                    let currentPage = 1
                    const $mainSearchModal = $('#main-search-modal')
                    const $multiForm = $('#multi-form')
                    const $q = $('#q')
                    const $container = $('#container')
                    const $history_list = $('.search-history__list')
                    $container.html('<div class="multi-cell multi-sidebar" id="filters">' + '<div class="multi-filters">' + '<div class="multi-taxons">' + '</div>' + '</div>' + '</div>' + '<div class="multi-cell multi-lists">' + '<div class="multi-grid" id="content">' + '</div>' + '</div>')
                    const $categoryId = $('#category_id')
                    let $multiTaxons = $('.multi-filters')
                    const $categoriesHtml = $('.multi-taxons')
                    const $content = $('#content')
                    const $productsListContainer = $('#products-list__container')
                    const $productsList = $('#products-list')
                    const $search_history = $('.search-history')
                    const $empty_block = $('.empty-result')
                    $productsListContainer.removeClass('d-none')
                    $search_history.removeClass('d-none')
                    // Event handlers
                    if (options.autoInit) {
                        $(document).on('click', '#MSearch-entry', function () {
                            if (lang !== window.MSearch.config.lang) {
                                $('.products-list').empty()
                                products_list_rendered = false
                            }
                            $(document.body).addClass('_lock')
                            words = window.MSearch.words[window.MSearch.config.lang]
                            lang = window.MSearch.config.lang
                            $q.attr('placeholder', words.placeholder)
                            $('#products-list__container .title').text(words.popular_title)
                            $('.search-history .title').text(words.history_title)
                            renderHistoryList()
                            getRecProducts()
                            renderEmptyState()
                            $mainSearchModal.fadeToggle('slow')
                            $('#q').focus()
                        })
                    }

                    $(document).on('click', '.multi-previous', function () {
                        if (currentPage > 1) {
                            currentPage--
                            $('.multi-counter').text(currentPage)
                            $multiForm.submit()
                        }
                    })
                    $(document).on('click', '.suggestion-delete__btn', function (e) {
                        e.preventDefault()
                        e.stopPropagation() // Stop event propagation
                        const recentSearches = JSON.parse(localStorage.getItem('recentSearches')) || []
                        const value = $(this).val()
                        const index = recentSearches.indexOf(value)
                        recentSearches.splice(index, 1)
                        localStorage.setItem('recentSearches', JSON.stringify(recentSearches))
                        $(this).parent().remove()
                        if (recentSearches.length === 0) {
                            $search_history.addClass('d-none')
                        }
                    })
                    $(document).on('click', '.suggestion-item._history', function (e) {
                        e.preventDefault()
                        const value = $(this).data('id')
                        $q.val(value)
                        $search_history.addClass('d-none')
                        $empty_block.addClass('d-none')
                        $productsListContainer.addClass('d-none')
                        $multiForm.submit()
                    })
                    $(document).on('click', '.multi-phrase', function () {
                        $q.val($(this).data('name'))
                        $categoryId.val('')
                        $multiForm.submit()
                    })
                    $(document).on('click', '.multi-next', function () {
                        if (currentPage < lastPage) {
                            currentPage++
                            $multiForm.submit()
                            $('.multi-counter').text(currentPage)
                        }
                    })
                    $('.multi-closeIcon').on('click', function () {
                        $q.val('')
                        $categoriesHtml.empty()
                        $content.empty()
                        // $container.empty();
                        $('.multi-corrected').hide()
                        $(document.body).removeClass('_lock')
                        $mainSearchModal.hide()
                    })
                    $('.multi-searchIcon').on('click', function () {
                        $multiForm.submit()
                    })
                    let timeout = null
                    //
                    $(document).on('input', '#q', function () {
                        if (!$q.val()) {
                            $('.multi-corrected').hide()
                            $search_history.removeClass('d-none')
                            $productsListContainer.removeClass('d-none')
                            $categoriesHtml.empty()
                            $content.empty()
                            $empty_block.addClass('d-none')
                            renderHistoryList()
                        } else {
                            $search_history.addClass('d-none')
                            $empty_block.addClass('d-none')
                            $productsListContainer.addClass('d-none')
                        }

                        $q.autocomplete('close')
                    })

                    $q.autocomplete({
                        appendTo: '#multi-form',
                        source: function (request, response) {
                            if (request.term.trim() === '') {
                                // If the search input is empty, use the recent searches as the source
                                return response([])
                            } else {
                                // If the search input is not empty, fetch the suggestions from the server
                                const searchTerm = request.term.replace(/\//g, ' ')
                                $categoryId.val('')
                                $('.multi-corrected').hide()
                                currentPage = 1
                                if (timeout) {
                                    clearTimeout(timeout)
                                }
                                timeout = setTimeout(function () {
                                    $multiForm.submit()
                                }, options.debounce)
                                $.getJSON('https://mobile.olcha.uz/api/v2/multi-search/products/' + searchTerm + '?page=' + currentPage, function (data) {
                                    if (data.results.item_groups.length > 0) {
                                        $q.autocomplete('close')
                                        return response([])
                                    } else if (data.results.suggestions.length < 1) {
                                        $q.autocomplete('close')
                                        return response([])
                                    }
                                    const options = data.results.suggestions.options.map(function (option) {
                                        return {
                                            label: option.name, value: option.name
                                        }
                                    })
                                    response(options)
                                })
                            }
                        },
                        delay: 500,
                        minLength: 0, // Allow showing suggestions when the search input is empty
                        select: function (event, ui) {
                            $q.autocomplete('close')
                            $categoryId.val('')
                            currentPage = 1
                            if (!$q.val()) {
                                $container.html('<div class="multi-cell multi-sidebar" id="filters">' + '<div class="multi-filters">' + '<div class="multi-taxons"></div>' + '</div>' + '</div>' + '<div class="multi-cell multi-lists">' + '<div class="multi-grid" id="content">' + '</div>' + '</div>')
                            }
                            $q.val(ui.item.value)
                            $multiTaxons = $('.multi-taxons')
                            $multiForm.submit()

                            // Save the selected item to localStorage
                            const recentSearches = JSON.parse(localStorage.getItem('recentSearches')) || []
                            console.log(recentSearches.includes(ui.item.value))
                            if (!recentSearches.includes(ui.item.value)) { // Check if the item does not exist in the array
                                if (recentSearches.length >= 4) {
                                    // Remove the oldest search item if there are already 4 items
                                    recentSearches.shift()
                                }
                                recentSearches.push(ui.item.value)
                                localStorage.setItem('recentSearches', JSON.stringify(recentSearches))
                            }
                            return false
                        }
                    }).autocomplete('instance')._renderItem = function (ul, item) {
                        let html = '<div>'

                        if (!$q.val()) {
                            html += '<div class=\'history-icon\'>' + '<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">' + '<path fill-rule="evenodd" clip-rule="evenodd" d="M3.69384 3.68353C7.70002 -0.317008 14.2124 -0.274472 18.2431 3.75621C22.2755 7.78864 22.3164 14.3049 18.3106 18.3107C14.3049 22.3164 7.7886 22.2756 3.75617 18.2431C1.36656 15.8535 0.37977 12.5935 0.803504 9.50208C0.862879 9.0689 1.26217 8.76588 1.69535 8.82525C2.12852 8.88463 2.43155 9.28392 2.37217 9.7171C2.01331 12.3352 2.84849 15.0963 4.87576 17.1236C8.30049 20.5483 13.8142 20.5679 17.191 17.1911C20.5679 13.8142 20.5483 8.30053 17.1235 4.8758C13.7005 1.45282 8.19072 1.43147 4.81343 4.80311L5.60267 4.80708C6.03989 4.80927 6.39255 5.16549 6.39035 5.60271C6.38815 6.03993 6.03193 6.39259 5.59472 6.39039L2.90774 6.37689C2.47363 6.3747 2.12225 6.02332 2.12007 5.58921L2.10656 2.90224C2.10436 2.46502 2.45702 2.1088 2.89424 2.1066C3.33146 2.1044 3.68768 2.45706 3.68988 2.89428L3.69384 3.68353ZM10.9995 5.9857C11.4368 5.9857 11.7912 6.34014 11.7912 6.77737V10.6717L14.1982 13.0787C14.5074 13.3878 14.5074 13.8891 14.1982 14.1983C13.8891 14.5074 13.3878 14.5074 13.0786 14.1983L10.2079 11.3275V6.77737C10.2079 6.34014 10.5623 5.9857 10.9995 5.9857Z" fill="#AFAFAF"/>' + '</svg>' + '</div>'
                        }

                        html += '<span>' + item.label + '</span>'

                        // if (!$q.val()) {
                        //     html += "<button type=\'button\' data-value=\'item.label\' class=\'suggestion-delete__btn\'>" + closeIcon + "</button>"
                        // }

                        return $('<li class=\'suggestion-item\'>')
                            .append(html)
                            .appendTo(ul)
                    }

                    // Show the suggestions when the search input is focused
                    //                     $q.on('focus', function () {
                    //                         $q.autocomplete('open');
                    //                     });

                    $(document).on('click', '.multi-taxon', function () {
                        const categoryId = $(this).data('id')
                        $categoryId.val(categoryId)
                        currentPage = 1
                        $('.multi-taxon').removeClass('multive-active')
                        $multiForm.submit()
                    })
                    $(document).on('click', '.multi-cell .multi-title', function () {
                        const categoryId = $(this).data('id')
                        $categoryId.val(categoryId)
                        currentPage = 1
                        $('.multi-taxon').removeClass('multive-active')
                        $multiForm.submit()
                    })

                    $(document).on('click', '.multi-more', function () {
                        const categoryId = $(this).data('id')
                        $categoryId.val(categoryId)
                        $('.multi-taxon').removeClass('multive-active')
                        $multiForm.submit()
                    })

                    $(document).on('click', '.category-show', function () {
                        const categoryId = $(this).data('id')
                        $categoryId.val(categoryId)
                        $('.multi-taxon').removeClass('multive-active')
                        $multiForm.submit()
                    })
                    $(document).on('click', '#all_results', function () {
                        document.getElementById('content').scrollIntoView({behavior: 'smooth', block: 'start'})
                    })

                    $multiForm.on('submit', function (event) {
                        event.preventDefault()
                        // $q.autocomplete('close');
                        // $container.empty();

                        $empty_block.addClass('d-none')
                        $.ajaxSetup({
                            headers: {
                                'Accept-Language': lang
                            }
                        })
                        const query = $q.val()
                        const categoryId = $categoryId.val()
                        const searchTerm = query.replace(/\//g, ' ')
                        const url = 'https://mobile.olcha.uz/api/v2/multi-search/products/' + searchTerm + '?category_id=' + categoryId + '&page=' + currentPage

                        if (categoryId) {
                            const recentSearches = JSON.parse(localStorage.getItem('recentSearches')) || []
                            if (!recentSearches.includes($q.val())) { // Check if the item does not exist in the array
                                if (recentSearches.length >= 4) {
                                    // Remove the oldest search item if there are already 4 items
                                    recentSearches.shift()
                                }
                                recentSearches.push($q.val())
                                localStorage.setItem('recentSearches', JSON.stringify(recentSearches))
                            }
                        }

                        $.getJSON(url, function (data) {
                            // $multiTaxons.empty();
                            // $content.empty();

                            if (data.results.categories.length === 0 && data.results.item_groups.length === 0 && data.results.suggestions.options.length === 0) {
                                $empty_block.removeClass('d-none')
                                $productsListContainer.removeClass('d-none')
                                $categoriesHtml.empty()
                                $content.empty()
                                return
                            }

                            $categoriesHtml.empty()
                            if (data.results.suggestions.options.length === 0 && data.results.corrected) {
                                $('.multi-corrected').hide()
                                $('#filters').prepend('<div class="multi-corrected">' + '<span>' + words.perhaps_you_mean + ' ' + '<a href="#" style="color: " data-name="' + data.results.corrected + '" class="multi-phrase"><b>' + data.results.corrected + '</b>' + '</a>' + '</span>' + '</div>')
                            }

                            if (!categoryId) {
                                if (data.results.categories.length > 0) {
                                    $categoriesHtml.append('<div class="multi-taxon multi-active" id="all_results"><span>' + words.all_results + '</span><span class="multi-badge" style="--color: rgb(218,0,43); --hover-color: rgba(218,0,43,0.6);">' + data.total + '</span></div>')
                                }
                            } else {
                                $categoriesHtml.append('<div class="multi-taxon" id="all_results"><span>' + words.all_results + '</span><span class="multi-badge" style="--color: rgb(218,0,43); --hover-color: rgba(218,0,43,0.6);">' + data.total + '</span></div>')
                            }

                            $.each(data.results.categories, function (i, category) {
                                if (categoryId == category.id) {
                                    $categoriesHtml.append('<div class="multi-taxon multi-active" data-id="' + category.id + '"><span>' + category.name + '</span><span class="multi-badge" style="--color: rgb(218,0,43); --hover-color: rgba(218,0,43,0.6);">' + category.count + '</span></div>')
                                } else {
                                    $categoriesHtml.append('<div class="multi-taxon" data-id="' + category.id + '"><span>' + category.name + '</span><span class="multi-badge" style="--color: rgb(218,0,43); --hover-color: rgba(218,0,43,0.6);">' + category.count + '</span></div>')
                                }
                            })

                            // $multiTaxons.empty()
                            $multiTaxons.append($categoriesHtml)
                            $content.empty()
                            $.each(data.results.item_groups, function (i, itemGroup) {
                                if (!categoryId) {
                                    renderAllCategories(itemGroup)
                                } else {
                                    renderSelectedCategory(itemGroup)
                                }
                            })
                        })
                            .fail(function (jqxhr, textStatus, error) {
                                $multiTaxons.empty()
                                $content.empty()
                                const err = textStatus + ', ' + error
                                console.log('Request Failed: ' + err)
                            })
                    })

                    function renderAllCategories(itemGroup) {
                        if (!$content.hasClass('_rows')) {
                            $content.addClass('_rows')
                        }
                        const cell = $('<div>').addClass('multi-cell')
                        cell.append('<a class="multi-title" data-id="' + itemGroup.category.id + '"><span>' + itemGroup.category.name + '<div class="multi-titleIcon"><div class="multi-icon multi-arrow-rightIcon"><svg class="multi-svg category-show" data-id="' + itemGroup.category.id + '" viewBox="0 0 50 50"><path class="multi-svg-path" d="M24.7 34.7l-1.4-1.4 8.3-8.3-8.3-8.3 1.4-1.4 9.7 9.7z"></path><path class="multi-svg-path" d="M16 24h17v2H16z"></path></svg></div></div></span></a>')
                        const length = itemGroup.items.length
                        const count = itemGroup.category.count

                        $.each(itemGroup.items, function (j, item) {
                            var itemDiv = $('<div>').addClass('multi-item multi-withoutUrl')
                            itemDiv.append('<a rel="nofollow" href="' + `${origin}/${lang}` + '/product/view/' + item.alias + '">' + '<div class="multi-thumbnail">' + '<img class="multi-image" src="' + item.main_image + '">' + '</div>' + '</a>')
                            itemDiv.append('<div class="multi-content">' + '<a rel="nofollow" href="' + `${origin}/${lang}` + '/product/view/' + item.alias + '">' + '<span>' + item.name + '</span>' + '</a>' + '<div class="multi-snippet">' + '<span class="multi-oldPrice">' + numberFormatter(item.price) + '</span>' + '<span class="multi-price multi-newPrice">' + '<span class="multi-currency">' + numberFormatter(item.discount_price) + item.currency + '</span>' + '</span>' + '</div>' + '</div>')
                            cell.append(itemDiv)

                            if ((length - 1) == j && length < count) {
                                var itemDiv = $('<div>')
                                itemDiv.append('<div class="multi-more _desktop" data-id="' + itemGroup.category.id + '">' + words.more + ' ' + count + ' ...</div>')
                                itemDiv.append('<div class="multi-more _mobile" data-id="' + itemGroup.category.id + '">' +
                                    '<svg width="50" height="50" viewBox="0 0 50 50" fill="none" xmlns="http://www.w3.org/2000/svg">' +
                                    '<circle cx="25" cy="25" r="24.25" stroke="#ADB9C5" stroke-width="1.5"/>' +
                                    '<path d="M33.0742 24.7145H17.4492" stroke="#ADB9C5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M26.7734 18.4392L33.0755 24.7142L26.7734 30.9902" stroke="#ADB9C5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg> </div>')
                                cell.append(itemDiv)
                            }
                        })
                        // console.log(cell)
                        $content.append(cell)
                    }

                    function renderSelectedCategory(itemGroup) {
                        // var itemsPerPage = 5;
                        // var numChunks = Math.ceil(itemGroup.items.length / itemsPerPage);
                        const total = itemGroup.category.count
                        lastPage = total / 15

                        if ($content.hasClass('_rows')) {
                            $content.removeClass('_rows')
                        }
                        $content.append('<a class="multi-title _col-span-3"><span>' + itemGroup.category.name + '</span></a>')
                        for (let chunk = 0; chunk < itemGroup.items.length; chunk++) {
                            const item = itemGroup.items[chunk]
                            const itemDiv = $('<div>').addClass('multi-item multi-withoutUrl')
                            itemDiv.append('<a rel="nofollow" href="' + `${origin}/${lang}` + '/product/view/' + item.alias + '"><div class="multi-thumbnail">' +
                                '<img class="multi-image" src="' + item.main_image + '"></div></a>')
                            itemDiv.append('<div class="multi-content"><a rel="nofollow" href="' + `${origin}/${lang}` + '/product/view/' + item.alias + '"><span>' + item.name + '</span></a><div class="multi-snippet"><span class="multi-oldPrice">' + numberFormatter(item.price) + '</span><span class="multi-price multi-newPrice"><span class="multi-currency">' + numberFormatter(item.discount_price) + item.currency + '</span></span></div></div>')

                            $content.append(itemDiv)
                        }

                        if (total > 15) {
                            var paginationDiv = $('<div>').addClass('multi-pagination _col-span-3')
                            if (currentPage > 1) {
                                paginationDiv.append('<div class="multi-previous multi-page"><div class="multi-icon multi-arrow-leftIcon"> <svg class="multi-svg" viewBox="0 0 50 50"><path class="multi-svg-path" d="M25.3 34.7L15.6 25l9.7-9.7 1.4 1.4-8.3 8.3 8.3 8.3z"></path><path class="multi-svg-path" d="M17 24h17v2H17z"></path></svg></div></div>')
                            }

                            if (currentPage < lastPage) {
                                paginationDiv.append('<div class="multi-next multi-page"><div class="multi-icon multi-arrow-rightIcon"><svg class="multi-svg" viewBox="0 0 50 50"><path class="multi-svg-path" d="M24.7 34.7l-1.4-1.4 8.3-8.3-8.3-8.3 1.4-1.4 9.7 9.7z"></path><path class="multi-svg-path" d="M16 24h17v2H16z"></path></svg></div></div>')
                            }
                            paginationDiv.append('<span class="multi-counter" style="--color: rgb(218,0,43);">' + currentPage + '</span>')
                        }
                        $content.append(paginationDiv)

                        document.getElementById('content').scrollIntoView({behavior: 'smooth', block: 'start'})
                    }

                    function renderHistoryList() {
                        const recentSearches = JSON.parse(localStorage.getItem('recentSearches')) || []

                        if (recentSearches.length > 0) {
                            $history_list.empty()
                            $.each(recentSearches, function (i, item) {
                                let html = ''

                                if (!$q.val()) {
                                    html += '<div class=\'history-icon\'>' + '<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">' + '<path fill-rule="evenodd" clip-rule="evenodd" d="M3.69384 3.68353C7.70002 -0.317008 14.2124 -0.274472 18.2431 3.75621C22.2755 7.78864 22.3164 14.3049 18.3106 18.3107C14.3049 22.3164 7.7886 22.2756 3.75617 18.2431C1.36656 15.8535 0.37977 12.5935 0.803504 9.50208C0.862879 9.0689 1.26217 8.76588 1.69535 8.82525C2.12852 8.88463 2.43155 9.28392 2.37217 9.7171C2.01331 12.3352 2.84849 15.0963 4.87576 17.1236C8.30049 20.5483 13.8142 20.5679 17.191 17.1911C20.5679 13.8142 20.5483 8.30053 17.1235 4.8758C13.7005 1.45282 8.19072 1.43147 4.81343 4.80311L5.60267 4.80708C6.03989 4.80927 6.39255 5.16549 6.39035 5.60271C6.38815 6.03993 6.03193 6.39259 5.59472 6.39039L2.90774 6.37689C2.47363 6.3747 2.12225 6.02332 2.12007 5.58921L2.10656 2.90224C2.10436 2.46502 2.45702 2.1088 2.89424 2.1066C3.33146 2.1044 3.68768 2.45706 3.68988 2.89428L3.69384 3.68353ZM10.9995 5.9857C11.4368 5.9857 11.7912 6.34014 11.7912 6.77737V10.6717L14.1982 13.0787C14.5074 13.3878 14.5074 13.8891 14.1982 14.1983C13.8891 14.5074 13.3878 14.5074 13.0786 14.1983L10.2079 11.3275V6.77737C10.2079 6.34014 10.5623 5.9857 10.9995 5.9857Z" fill="#AFAFAF"/>' + '</svg>' + '</div>'
                                }

                                html += '<span>' + item + '</span>'

                                if (!$q.val()) {
                                    html += '<button type=\'button\' value="' + item + '" class=\'suggestion-delete__btn\'>' + closeIcon + '</button>'
                                }
                                $('<li data-id="' + item + '" class=\'suggestion-item _history\'>')
                                    .append(html)
                                    .appendTo($history_list)
                            })
                            $search_history.removeClass('d-none')
                        } else {
                            $search_history.addClass('d-none')
                        }
                    }

                    function getRecProducts() {
                        $.ajaxSetup({
                            headers: {
                                'Accept-Language': lang
                            }
                        })
                        if (products_list_rendered) {
                            if ($productsListContainer.attr('data-empty') !== 'true') {
                                $productsListContainer.removeClass('d-none')
                            }
                            return
                        }
                        products_list_rendered = true
                        $.getJSON('https://mobile.olcha.uz/api/v2/recommendation/products?per_page=5', function (data) {
                            if (data.data.products.length > 0) {
                                $.each(data.data.products, function (j, product) {
                                    $('.products-list').append(createProductCard(product, words, lang))
                                })
                            } else {
                                $productsListContainer.attr('data-empty', true)
                            }
                        }).fail(function (jqxhr, textStatus, error) {
                            $productsList.empty()
                            $productsList.addClass('d-none')
                            const err = textStatus + ', ' + error
                            console.log('Request Failed: ' + err)
                        })
                    }

                    function renderEmptyState() {
                        $empty_block.addClass(' d-none').html(
                            '<div class="empty-result__icon">' +
                            '<img src="data:image/svg+xml,%3csvg%20width=\'24\'%20height=\'24\'%20viewBox=\'0%200%2024%2024\'%20fill=\'none\'%20xmlns=\'http://www.w3.org/2000/svg\'%3e%3cpath%20d=\'M21.71%2020.29L18%2016.61C19.4401%2014.8144%2020.1375%2012.5353%2019.9488%2010.2413C19.7601%207.94733%2018.6997%205.81281%2016.9855%204.27667C15.2714%202.74053%2013.0338%201.91954%2010.7329%201.9825C8.43203%202.04546%206.24272%202.98759%204.61514%204.61517C2.98756%206.24275%202.04543%208.43207%201.98247%2010.7329C1.91951%2013.0338%202.7405%2015.2714%204.27664%2016.9855C5.81278%2018.6997%207.9473%2019.7601%2010.2413%2019.9488C12.5353%2020.1375%2014.8144%2019.4401%2016.61%2018L20.29%2021.68C20.383%2021.7738%2020.4936%2021.8482%2020.6154%2021.8989C20.7373%2021.9497%2020.868%2021.9758%2021%2021.9758C21.132%2021.9758%2021.2627%2021.9497%2021.3846%2021.8989C21.5064%2021.8482%2021.617%2021.7738%2021.71%2021.68C21.8902%2021.4936%2021.991%2021.2444%2021.991%2020.985C21.991%2020.7257%2021.8902%2020.4765%2021.71%2020.29ZM11%2018C9.61553%2018%208.26215%2017.5895%207.111%2016.8203C5.95986%2016.0511%205.06265%2014.9579%204.53284%2013.6788C4.00303%2012.3997%203.8644%2010.9923%204.1345%209.63439C4.4046%208.27653%205.07128%207.02925%206.05025%206.05028C7.02922%205.07131%208.2765%204.40463%209.63436%204.13453C10.9922%203.86443%2012.3997%204.00306%2013.6788%204.53287C14.9579%205.06268%2016.0511%205.95989%2016.8203%207.11103C17.5895%208.26218%2018%209.61556%2018%2011C18%2012.8565%2017.2625%2014.637%2015.9497%2015.9498C14.637%2017.2625%2012.8565%2018%2011%2018Z\'%20fill=\'white\'/%3e%3c/svg%3e" alt="search">' +
                            '</div>' +
                            '<h4>' + words.empty_result_title +
                            '</h4>' +
                            '<p>' + words.empty_result_description +
                            '</p>'
                        )
                    }

                    getRecProducts()
                    renderHistoryList()
                    renderEmptyState()
                }

                function onError(e) {
                    e.parentElement.classList.add('_no-image')
                }

                function createProductCard(product) {
                    let discountPriceHTML = ''
                    if (product.discount_price && product.discount_price < product.total_price) {
                        discountPriceHTML = '<p class="product-card__discount-price">' + numberFormatter(product.discount_price) + '</p>'
                    }
                    return '<div class="product-card">' +
                        '<a class="product-card__link" rel="nofollow" href="' + `${origin}/${lang}` + '/product/view/' + product.alias + '"></a>' +
                        '      <div class="product-card__image ' + (product.is_white ? '_is-white' : '') + '">' +
                        '        <img src=" ' + product.main_image + '" alt=" ' + product.name + '" onerror="onError(this)">' +
                        '      </div>' + '      ' + '      <div class="product-card__content">' +
                        '        <h2 class="product-card__name">' + '          ' + product.name + '' +
                        '        </h2>' + '<div>' + discountPriceHTML +
                        '        <p class="product-card__price">' + numberFormatter(product.total_price) + ' ' + words.sum + '</p>' +
                        '        <button class="product-card__add-cart-btn">' + words.add_cart +
                        '        </button>' + '</div>' + '        ' + '      </div>' + '</div>'
                }

                // Call mainFunction within the scope of jQuery
                mainFunction()
            })(jQuery) // Pass jQuery as an argument to the self-invoking function
        })
    },
    open: function () {
        const $mainSearchModal = $('#main-search-modal')
        $mainSearchModal.fadeToggle('slow')
        $('#q').focus()
    }
}
